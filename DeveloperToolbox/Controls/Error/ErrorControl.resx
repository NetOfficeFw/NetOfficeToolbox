<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAB65JREFUWEelVwtQ
        lFUUtnGssSbSCsfsgQbCwi6LvNfdBUVQeayEL0SBBV/5SiXwkaZlvojAlMoUNd9pj6ms8IFGTDpTUzlN
        hFDjpEwDuzx2AQUWWXbZr3P+/18RWNPqzHyzd87rO/fc+997d8D9yt4xnm4lKt/s0nBZeVm4D8rCJPA4
        XIYylS9Kx/qVnx8rzy4K9HKTwv63PHAyxMeTSCsuRfjjzxVzYMpfDdvJHej+uBD2YwXoOpQL6/4taH9n
        HWpXZ6JKn4CLEUp8q5ZXnAyVeXIOMdW/l4EXVL5Fl7QKNOStAs4dBk5/QDhEOAqcOSb+fn0E+Ipsp8j2
        YSGsezajLTcL116cCi76G42iiHOJKe9fBn0bLjNeydABxfuBs0RScgLWwvVoXpIEQ0IA/tI8R/DAX1oC
        jQ3xAWhelIiu/DXAp3vR+e7raMxJxy86Ncq0/kbOKaa+twwqDfUxGLcsBy7QDEuOw7ZvOwy6MagZ54Wa
        aB/UTvSDYZK8F1hXEy1DTdRoGHWBsO/aABwuQFOOHr/PiEKZRmHg3CLF3WVQaZisTiA/L876Zk4qasZ7
        EYkfjLH+MMYpRfA4ViGht94wmQqa4IPWlcm0LO/ATHunKimCOqGoYw6Rqr8MPBMuO1Chp7bzzM+dQMvy
        ZBhiiDguAHUJQajTSSAiAxEYtCNF0Jh1t+3ka4wfQ0UrcGPJNODoTjTMTcRPMcE4q5YfYC6RskceyJOP
        9L0YoRDX/NxxtK7Rw0gJ6qmd9YkhPWCCGF9YPqXNKAmPWce2vr7GWCXaslKA3VtQnajBpUgl3lI878uc
        IrUoD14Ik1U15OUIG86+Pxd1FFj/Qggapob3BunqaJ37CuvY1te//oVQ6kggHAWv0KTmo2JiMEq1yirm
        FKlJpo14YgR/MsKndvY4TMlaNFKgabqKMLY3ksLQEOUl0fYI69jWz5/QSHrzrAjgQB6q40Lp81Ri+tNP
        jpDoBwz8JMR7Ax8yKD4A23ub0DglBObpaphnavtjGiWMkUm0PcI6trmMmaGBibph354NE+2Fy1o5PlH5
        bWBuLmDwuTCfKlM+HTbFB9G+Kl1I1EQVN82K7I+ZlGwy7ZVbHRI1CY1ZxzaXMQQuwrIiBZ0bX0K5yhvn
        I4RlGMwFDOXznI9XFB9GS1oMmpMj0Tw7yjVmjYOZ1tR+/Q+JHcKYdWxzGcMg2w39RNqMW1EZ6IHvxo8B
        c3MB7nypdH+0SyigiVrfQgEtqdGuwckSQ2GruCzRQxiz7h/j5kygIiKBfXmo9BvuLMCdCxjGBdiP5dO5
        fgjNMyNxI20ibqRPco3UGLRMU6PzMzqoJOEx69jmMoZBObkIFOXiymh3ZwHDxAJoCawHc4EvD+Jmyni0
        6iejNSPWNfSTcJOWqPPLExI9FUBj1rHNZQyDc1IR2Lsd5aOG4GJU4J0FyGDdt1m40VrnRKMtIw5tcxNc
        IzMebeRj2UTHtSQ8Zp1gcxXDYJs+Vixg5GN9CqDHRHvhOuDzfWina7R9ng7tCxLvDirw1ptrJXr6CGjM
        Ope+TsyfAssiOpYLX+/XAffT4b5Xa1dnwEFndteGxbCw84tJdwcltFBL22m5GDwWdK58nViYCNuaebBk
        z8Vlv6dwVqu8ytxcwNDdSs8dVenx6Hx/Exx0EHVQsg6qtmPxdNdYmIQOWlfL7AkCeCzoXPk6QZ1F7irU
        TtHgx+BR2BPovYO5uYDBcreHg/gZ1bp9JXByNzpfSsEtCrq1dGZ/LCE9LZGt5AtpAegzpDHrBJvLmBmw
        rpgttL/SZxgujguA3O2RIObmAvg4fPqMSnbt2sKp6CzcSBtlG6yLKWjZLFipmF5YmgxrRrxE3SOsE2x9
        /RnL6F2Qvw7mtHhc9n+G2u9/jTklbkGGxA8fquMLqTE7DY4P8uDYmoUuKqBr+Wx00T1xG5Swi3Z1X2Gd
        YLvTl2bdtTwFjteWwf7GSvzKm49mHz/8cR1zitSi8NXocTTY+9QvCXQPUBE4shPd9HnZVqTCtjINtqx0
        ETym7nR/87VEDWHMul5+kq9j41Jg12v4Xfksvg/zxrEw31PMJXHeFn4cPEpQnlfLzVX0hjPRzHGwANiW
        DTsls7+shz07Q/ylxHZqt52WTACPWef0kfxAs2byq6Fe+FnpgQvjAszMIXH1e67zevB3qSpRy02V9Iar
        z5wCx7ubAIJj7QJ0r5rbg5zM3mDd6nkCHK8sBN5eL7SdZ/5zgAfdfgEmzi1x9HuSOYUfjE8R1CUaeRO/
        4aoT1bhJyXljYidt0C1ZwLpFwNr5hAU9WL8Y2EwzLlgv+JlT4/ArnXg/UNuJvIlzSrnv/TImsKPqcLBP
        Mb/hfosJQnVsKBoz6VN7dQl15A1gDxX0/lbhrSf8Eqnl5UzU0v+ASu9hwm7nDXckTFbMuaSc9yR3Cjty
        q5RR7kPmnFYrqvkZxS8ZfkxUBj4nXKlXRj8pnOvlHm7C8con3I9BowTi01plNcdyDinXfZM7hdeJN8tI
        Qugzgx/SvaV8vqhY43+dr9IeBArnOqNYo7yer/QsYl+OkWI5x13X/F7CO5U/F/5m+eDg5zS3M4oQ3Qes
        Yxv7sC/HcOx//nPaV3gWfHTy+c2XCLf1TrCObexznzMeMOBvOUG0oNLjK+AAAAAASUVORK5CYII=
</value>
  </data>
</root>